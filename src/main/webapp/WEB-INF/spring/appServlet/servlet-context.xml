<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
	 	http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- Properties files -->
	<context:property-placeholder location="classpath:strings.properties, classpath:postgresqldb.properties"/>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
 	<context:component-scan base-package="eu.aproject.app" />
	
	<beans:bean class="java.net.URI" id="dbUrl">
		<beans:constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />
	</beans:bean>
	
	<beans:bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}" />
		<beans:property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() 
			+ ':' + @dbUrl.getPort() + @dbUrl.getPath() }" /> <beans:property name="username" 
			value="#{ @dbUrl.getUserInfo().split(':')[0] }" /> <beans:property name="password" 
			value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
		<beans:property name="initialSize" value="2" />
		<beans:property name="maxActive" value="5" />
	</beans:bean>
	

	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="packagesToScan" >
		    <beans:list>
		        <beans:value>eu.aproject.app.model</beans:value>
		    </beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">
					${jdbc.hibernateDialect}
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>

	
	
</beans:beans>
